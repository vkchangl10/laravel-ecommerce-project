1.   Create Admin Table(Migration), Model
---------------------------------------------------- 

    Admin panel ke liye hme sabse phhle admin k liye migration file, model file or AdminController banane pdenege 

    Admin Migration File:
    ------------------------------
    open Terminal >> New Terminal >> write command -  php artisan make:model admin -m    >> then press enter it will create admin model and migration file 


    Migration File Code: open database >> migraions >> create_admins_table.php   
    ----------------------------------------------------------------------------
    <?php
        use Illuminate\Database\Migrations\Migration;
        use Illuminate\Database\Schema\Blueprint;
        use Illuminate\Support\Facades\Schema;

        class CreateAdminsTable extends Migration
        {
            /**
            * Run the migrations.
            *
            * @return void
            */
            public function up()
            {
                Schema::create('admins', function (Blueprint $table) {

                    /* we define admin table columns here */
                    $table->id();
                    $table->string('name');
                    $table->string('email')->unique();
                    $table->timestamp('email_verified_at')->nullable();
                    $table->string('password');
                    $table->rememberToken();
                    $table->foreignId('current_team_id')->nullable();
                    $table->string('profile_photo_path', 2048)->nullable();
                    $table->timestamps();
                });
            }

            /**
            * Reverse the migrations.
            *
            * @return void
            */
            public function down()
            {
                Schema::dropIfExists('admins');
            }
        }



    Admin Model File Code:  open app >> Models >> admin.php 
    NOTE: User.php model ki file ko copy krke admin.php model file me paste kreneg or fir namespace or class ke name ko change kr denege
    --------------------------------------------------------------
    <?php
        namespace App\Models;
        use Illuminate\Contracts\Auth\MustVerifyEmail;
        use Illuminate\Database\Eloquent\Factories\HasFactory;
        use Illuminate\Foundation\Auth\User as Authenticatable;
        use Illuminate\Notifications\Notifiable;
        use Laravel\Fortify\TwoFactorAuthenticatable;
        use Laravel\Jetstream\HasProfilePhoto;
        use Laravel\Sanctum\HasApiTokens;

        class Admin extends Authenticatable
        {
            use HasApiTokens;
            use HasFactory;
            use HasProfilePhoto;
            use Notifiable;
            use TwoFactorAuthenticatable;

            /**
            * The attributes that are mass assignable.
            *
            * @var string[]
            */
            protected $fillable = [
                'name',
                'email',
                'password',
            ];

            /**
            * The attributes that should be hidden for serialization.
            *
            * @var array
            */
            protected $hidden = [
                'password',
                'remember_token',
                'two_factor_recovery_codes',
                'two_factor_secret',
            ];

            /**
            * The attributes that should be cast.
            *
            * @var array
            */
            protected $casts = [
                'email_verified_at' => 'datetime',
            ];

            /**
            * The accessors to append to the model's array form.
            *
            * @var array
            */
            protected $appends = [
                'profile_photo_url',
            ];
        }


    Now open Terminal Menu >> New terminal >> write command  php artisan migrate  >> press enter 
    ab admins name se automatic table create ho jaayegi  
____________________________________________________________________________________________________________________________________________________________________________________________________


2.  auth.php File Code
----------------------------

    Open config folder >> auth.php  file 

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        //admin guard
        'admin' => [
            'driver' => 'session',
            'provider' => 'admins',
        ],
    ],


    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],

        //admin provider
        'admins' => [
            'driver' => 'eloquent',
            'model' => App\Models\Admin::class,
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],


    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_resets',
            'expire' => 60,
            'throttle' => 60,
        ],

        //admin passwords
        'admins' => [
            'provider' => 'admins',
            'table' => 'password_resets',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],
____________________________________________________________________________________________________________________________________________________________________________________________________


3.  FortifyServiceProvider.php    code
    ----------------------------------------------
    
    Ab Admin Register function create krenege 
    Open App folder >> Providers >> FortifyServiceProvider.php  file    -  and write register method for admin 

    Example:

        //LINK LIBRARY OR FILES
        use Illuminate\Contracts\Auth\StatefulGuard;
        use App\Actions\Fortify\AttemptToAuthenticate;               //change file folder path
        use App\Actions\Fortify\RedirectIfTwoFactorAuthenticatable;  //change file folder path
        use App\Http\Controllers\AdminController;   //change file folder path
        use Auth;  


        //create register function
        public function register()
            {
                $this->app->when([AdminController::class, AttempToAuthenticate::class,
                RedirectIfTwoFactorAuthenticatable::class])
                ->needs(StatefulGuard::class)
                ->give(function(){
                    return Auth::guard('admin');
                });
            }


____________________________________________________________________________________________________________________________________________________________________________________________________


4.  AdminStatefulGuard.php  File Code
---------------------------------------------

     Ab app folder me Guards name se ek folder create krenege or fir Guards folder me AdminStatefulGuard.php   name se file create krenege 

    ab StatefulGuard.php  file open krenege  - file path = vendor\laravel\framework\src\Illuminate\Contracts\Auth\StatefulGuard.php
    file open krke pura code copy krenege or app folder >> Guards >> AdminsStatefulGuards.php   file me paste krenege
    fir AdminsStatefulGuards.php file me interface name change krenege  or namespace path change krenge 

    Example:
        <?php
            namespace App\Guards;
            interface AdminStatefulGuard extends Guard        //change interface name
            {
                /**
                * Attempt to authenticate a user using the given credentials.
                *
                * @param  array  $credentials
                * @param  bool  $remember
                * @return bool
                */
                public function attempt(array $credentials = [], $remember = false);

                /**
                * Log a user into the application without sessions or cookies.
                *
                * @param  array  $credentials
                * @return bool
                */
                public function once(array $credentials = []);

                /**
                * Log a user into the application.
                *
                * @param  \Illuminate\Contracts\Auth\Authenticatable  $user
                * @param  bool  $remember
                * @return void
                */
                public function login(Authenticatable $user, $remember = false);

                /**
                * Log the given user ID into the application.
                *
                * @param  mixed  $id
                * @param  bool  $remember
                * @return \Illuminate\Contracts\Auth\Authenticatable|bool
                */
                public function loginUsingId($id, $remember = false);

                /**
                * Log the given user ID into the application without sessions or cookies.
                *
                * @param  mixed  $id
                * @return \Illuminate\Contracts\Auth\Authenticatable|bool
                */
                public function onceUsingId($id);

                /**
                * Determine if the user was authenticated via "remember me" cookie.
                *
                * @return bool
                */
                public function viaRemember();

                /**
                * Log the user out of the application.
                *
                * @return void
                */
                public function logout();
            }

____________________________________________________________________________________________________________________________________________________________________________________________________


5.  AdminController.php  File Code
-----------------------------------------------

    ab AuthenticateSesionController.php  file open krenege - file path = vendor\laravel\fortify\src\Http\Controllers\AuthenticatedSessionController.php
    file open krke pura code copy kreneg or app folder >> Http >> Controller >> AdminController.php   file me paste krenge
    file AdminController.php  file me namespace change krenge

    Example:    AdminController.php  Code 
        <?php
            namespace App\Http\Controllers;   //change folder path
            use Illuminate\Contracts\Auth\StatefulGuard;
            use Illuminate\Http\Request;
            use Illuminate\Routing\Controller;
            use Illuminate\Routing\Pipeline;
            use App\Actions\Fortify\AttemptToAuthenticate;                  //change file folder path
            use Laravel\Fortify\Actions\EnsureLoginIsNotThrottled;
            use Laravel\Fortify\Actions\PrepareAuthenticatedSession;
            use App\Actions\Fortify\RedirectIfTwoFactorAuthenticatable;     //change file folder path
            use App\Http\Responses\LoginResponse;                           //change file folder path
            use Laravel\Fortify\Contracts\LoginViewResponse;
            use Laravel\Fortify\Contracts\LogoutResponse;
            use Laravel\Fortify\Features;
            use Laravel\Fortify\Fortify;
            use Laravel\Fortify\Http\Requests\LoginRequest;


            class AdminController extends Controller       //change class name 
            {
                /**
                * The guard implementation.
                *
                * @var \Illuminate\Contracts\Auth\StatefulGuard
                */
                protected $guard;

                /**
                * Create a new controller instance.
                *
                * @param  \Illuminate\Contracts\Auth\StatefulGuard  $guard
                * @return void
                */
                public function __construct(StatefulGuard $guard)
                {
                    $this->guard = $guard;
                }



                /* start - function for admin login */
                public function loginForm(){
                    return view('auth.login', ['guard' => 'admin'] );
                }
                /* end - function for admin login */

                

                /**
                * Show the login view.
                *
                * @param  \Illuminate\Http\Request  $request
                * @return \Laravel\Fortify\Contracts\LoginViewResponse
                */
                public function create(Request $request): LoginViewResponse
                {
                    return app(LoginViewResponse::class);
                }

                /**
                * Attempt to authenticate a new session.
                *
                * @param  \Laravel\Fortify\Http\Requests\LoginRequest  $request
                * @return mixed
                */
                public function store(LoginRequest $request)
                {
                    return $this->loginPipeline($request)->then(function ($request) {
                        return app(LoginResponse::class);
                    });
                }

                /**
                * Get the authentication pipeline instance.
                *
                * @param  \Laravel\Fortify\Http\Requests\LoginRequest  $request
                * @return \Illuminate\Pipeline\Pipeline
                */
                protected function loginPipeline(LoginRequest $request)
                {
                    if (Fortify::$authenticateThroughCallback) {
                        return (new Pipeline(app()))->send($request)->through(array_filter(
                            call_user_func(Fortify::$authenticateThroughCallback, $request)
                        ));
                    }

                    if (is_array(config('fortify.pipelines.login'))) {
                        return (new Pipeline(app()))->send($request)->through(array_filter(
                            config('fortify.pipelines.login')
                        ));
                    }

                    return (new Pipeline(app()))->send($request)->through(array_filter([
                        config('fortify.limiters.login') ? null : EnsureLoginIsNotThrottled::class,
                        Features::enabled(Features::twoFactorAuthentication()) ? RedirectIfTwoFactorAuthenticatable::class : null,
                        AttemptToAuthenticate::class,
                        PrepareAuthenticatedSession::class,
                    ]));
                }

                /**
                * Destroy an authenticated session.
                *
                * @param  \Illuminate\Http\Request  $request
                * @return \Laravel\Fortify\Contracts\LogoutResponse
                */
                public function destroy(Request $request): LogoutResponse
                {
                    $this->guard->logout();

                    $request->session()->invalidate();

                    $request->session()->regenerateToken();

                    return app(LogoutResponse::class);
                }
            }
       
____________________________________________________________________________________________________________________________________________________________________________________________________


6.  web.php   Route File Code
-----------------------------------------
    Now Open routes folder  >> open web.php  routes file and creates routes for Admin

    Example:
        
        //LINK AdminController FILE PATH
        use app\Http\Controllers\AdminController;

        /* START - ROUTE FOR ADMIN */
        Route::group(['prefix'=>'admin', 'middleware'=>['admin:admin']], function(){
            Route::get('/login', [AdminController::class, 'loginForm']);
            Route::post('/login', [AdminController::class, 'store'])->name('admin.login');
        });

        Route::middleware(['auth:sanctum,admin', 'verified'])->get('/admin/dashboard', function () {
            return view('dashboard');
        })->name('dashboard');

        /* END - ROUTE FOR ADMIN */



        /* define defaut guard for user */
        Route::middleware(['auth:sanctum,web', 'verified'])->get('/dashboard', function () {
            return view('dashboard');
        })->name('dashboard');

____________________________________________________________________________________________________________________________________________________________________________________________________

7.  login.blade.php  File Code
----------------------------------------
    Open  resourses folder >> views >>  auth  >>  login.blade.php  view file open krenege or <form>  tag me guard use krenge or condition define krenege    

    Example:
        use {{ isset($guard) ? url($guard.'/login') : route('login') }}   in action tag
        
        Example:
        <form method="POST" action="{{ isset($guard) ? url($guard.'/login') : route('login') }}">
            @csrf
        </form>
____________________________________________________________________________________________________________________________________________________________________________________________________


8.  How Create AttemptToAuthenticate or RedirectIfTwoFactorAuthenticatable  File
---------------------------------------------------------------------------------------- 
    Humne AdminController.php   file me  AttemptToAuthenticate or RedirectIfTwoFactorAuthenticatable  class use kr rkhi hai jo ki laravel ki default classes hai 
    in class ko hum Admin k liye bhi create krenege or dono file same hi rhengi 

    So Now open vendor\laravel\fortify\src\Actions   folder  and copy  AttemptToAuthenticate or RedirectIfTwoFactorAuthenticatable  file 
    and paste both files in app\Actions\Fortify   folder

    Now change both filers and change namespace in both files   
    
    Example:   namespace App\Actions\Fortify;


____________________________________________________________________________________________________________________________________________________________________________________________________


9.  RouteServiceProvider.php  File Code
----------------------------------------------------
    Ab admin login hone k baad hme dashboard show karwana hai to uske liye niche wali process krenege 

    Open app folder >> Providers >> RouteServiceProvider.php

    Example:

        /* Start - Show Dashboard After Admin Login */
            public static function redirectTo($guard){
                return $guard.'/dashboard';
            }
        /* End - Show Dashboard After Admin Login */

____________________________________________________________________________________________________________________________________________________________________________________________________


10. RedirectIfAuthenticated.php  Middleware   File Code
---------------------------------------------------------------- 
    Ab app folder >> Http >> middleware >> RedirectIfAuthenticated.php   file open krenege  
        or handle function me  redirect route update krenege

    Example:   
        public function handle(Request $request, Closure $next, ...$guards)
        {
            $guards = empty($guards) ? [null] : $guards;
            foreach ($guards as $guard) {
                if (Auth::guard($guard)->check()) {
                    return redirect($guard.'/dashboard');      //update route name
                }
            }
            return $next($request);
        }

____________________________________________________________________________________________________________________________________________________________________________________________________


11. AdminRedirectIfAuthenticated.php   File Code
--------------------------------------------------------  
    Ab App folder >> Http >> middleware >> RedirectIfAuthenticated.php   
        file ka pura code copy krnege or 
        App folder >> Http >> middleware folder  me hi  AdminRedirectIfAuthenticated.php   name se file create krenege or pura code usme paste kr denge 

        fir AdminRedirectIfAuthenticated.php  file me namespace change (AdminRedirectIfAuthenticated) krenege

    Example:

        <?php
                namespace App\Http\Middleware;

                use App\Providers\RouteServiceProvider;
                use Closure;
                use Illuminate\Http\Request;
                use Illuminate\Support\Facades\Auth;

                class AdminRedirectIfAuthenticated     //change class name as AdminRedirectIfAuthenticated   file name
                {
                    /**
                    * Handle an incoming request.
                    *
                    * @param  \Illuminate\Http\Request  $request
                    * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next
                    * @param  string|null  ...$guards
                    * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse
                    */
                    public function handle(Request $request, Closure $next, ...$guards)
                    {
                        $guards = empty($guards) ? [null] : $guards;

                        foreach ($guards as $guard) {
                            if (Auth::guard($guard)->check()) {
                                return redirect($guard.'/dashboard');
                            }
                        }

                        return $next($request);
                    }
                }

____________________________________________________________________________________________________________________________________________________________________________________________________


12.     Kernal.php  File Code
---------------------------------------------
        ab app folder >> Http  >> Kernal.php  file open krenege or admin guard register krenege 

        Example:
            protected $routeMiddleware = [
                'auth' => \App\Http\Middleware\Authenticate::class,
                'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
                'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
                'can' => \Illuminate\Auth\Middleware\Authorize::class,
                'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,


                //register admin middleware
                'admin' => \App\Http\Middleware\AdminRedirectIfAuthenticated::class,

                'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
                'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
                'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
                'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
            ];        

____________________________________________________________________________________________________________________________________________________________________________________________________


13.  LoginResponse.php   File Code
--------------------------------------------       
    Open LoginResponse.php  file  and copy all code   
        file path = vendor\laravel\fortify\src\Http\Responses\LoginResponse.php

        Now open app folder >> Http >> Create Responses folder >> create LoginResponse.php   file and paste all copied code in this file 

        Example:
            <?php
                namespace App\Http\Responses;      //change namespaces
                use Laravel\Fortify\Contracts\LoginResponse as LoginResponseContract;
                use Laravel\Fortify\Fortify;

                class LoginResponse implements LoginResponseContract
                {
                    /**
                    * Create an HTTP response that represents the object.
                    *
                    * @param  \Illuminate\Http\Request  $request
                    * @return \Symfony\Component\HttpFoundation\Response
                    */
                    public function toResponse($request)
                    {
                        return $request->wantsJson()
                            ? response()->json(['two_factor' => false])
                            : redirect()->intended('admin/dashboard');   //change route for show admin dashboard
                    }
                }


____________________________________________________________________________________________________________________________________________________________________________________________________

14.  LogoutResponse.php   File Code
-----------------------------------------------

    Ab hum chahte hai ki user logout kre tab user login page par hi redirect ho 

    Follow Steps:
    open   LogoutResponse.php   file   File Path =  \vendor\laravel\fortify\src\Http\Responses\LogoutResponse.php

    open file and change redirect Route:
    
    Example:

        <?php
            namespace Laravel\Fortify\Http\Responses;
            use Illuminate\Http\JsonResponse;
            use Laravel\Fortify\Contracts\LogoutResponse as LogoutResponseContract;
            use Laravel\Fortify\Fortify;
            class LogoutResponse implements LogoutResponseContract
            {
                /**
                * Create an HTTP response that represents the object.
                *
                * @param  \Illuminate\Http\Request  $request
                * @return \Symfony\Component\HttpFoundation\Response
                */
                public function toResponse($request)
                {
                    return $request->wantsJson()
                                ? new JsonResponse('', 204)
                                : redirect('/login');        //yha wo Route dalenge jha par hum logout k baad redirect karna chahte  hai
                }
            }

__________________________________________________________________________________________________________________________________________________________________________________________________
